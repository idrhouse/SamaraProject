@model IEnumerable<SamaraProject1.Models.Stands>

@{
    ViewData["Title"] = "Nuestros Stands - Sámara Market";
    Layout = "_Layout"; // Assuming you have a public layout
}

<div class="min-h-screen bg-gradient-to-br from-orange-50 via-amber-50 to-red-50 py-12 sm:py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">

        <!-- Encabezado Principal -->
        <div class="text-center mb-12 sm:mb-16">
            <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold tracking-tight text-gray-900">
                <span class="block">Explora Nuestros</span>
                <span class="block bg-clip-text text-transparent bg-gradient-to-r from-orange-500 to-red-600">
                    Stands en Sámara Market
                </span>
            </h1>
            <p class="mt-6 max-w-2xl mx-auto text-lg sm:text-xl text-gray-600">
                Descubre la variedad de emprendedores y productos que encontrarás en nuestro mercado.
            </p>
        </div>

        <!-- Mapa de Stands - Responsive -->
        <div class="mb-12 sm:mb-16 rounded-3xl overflow-hidden shadow-2xl ring-1 ring-black ring-opacity-5 bg-white">
            <div class="aspect-w-16 aspect-h-7 sm:aspect-h-6 md:aspect-h-5">
                <img src="/imagenes/mapa.jpeg" alt="Mapa de stands de Sámara Market" class="w-full h-full object-cover" />
            </div>
            <div class="p-4 bg-gray-50 text-center text-sm text-gray-600">
                Ubicación de los stands dentro de Sámara Market.
            </div>
        </div>

        <!-- Filtros (Opcional - Placeholder) -->
        <!--
        <div class="mb-8 flex justify-center">
            <div class="inline-flex rounded-md shadow-sm" role="group">
                <button type="button" class="px-4 py-2 text-sm font-medium text-orange-600 bg-white border border-gray-200 rounded-l-lg hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-orange-500">
                    Todos
                </button>
                <button type="button" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border-t border-b border-gray-200 hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-orange-500">
                    Disponibles
                </button>
                <button type="button" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-200 rounded-r-md hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-orange-500">
                    Categorías
                </button>
            </div>
        </div>
        -->
        <!-- Grid de Stands -->
        @if (Model.Any())
        {
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
                @foreach (var item in Model.OrderBy(s => s.Numero_Stand))
                {
                    <div class="bg-white rounded-2xl shadow-xl overflow-hidden flex flex-col transition-all duration-300 ease-in-out hover:shadow-2xl hover:-translate-y-2 transform">
                        <div class="p-6 flex-grow">
                            <div class="flex justify-between items-start mb-3">
                                <h3 class="text-2xl font-bold text-orange-600">Stand @item.Numero_Stand</h3>
                                @if (item.Disponible)
                                {
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-green-100 text-green-700 ring-1 ring-inset ring-green-600/20">
                                        <svg class="w-2 h-2 mr-1.5 text-green-500" fill="currentColor" viewBox="0 0 8 8">
                                            <circle cx="4" cy="4" r="3" />
                                        </svg>
                                        Disponible
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-amber-100 text-amber-700 ring-1 ring-inset ring-amber-600/20">
                                        <svg class="w-2 h-2 mr-1.5 text-amber-500" fill="currentColor" viewBox="0 0 8 8">
                                            <circle cx="4" cy="4" r="3" />
                                        </svg>
                                        Ocupado
                                    </span>
                                }
                            </div>

                            <p class="text-gray-700 text-sm mb-5 min-h-[3rem] line-clamp-2">@item.Descripcion_Stand</p>

                            <div class="border-t border-gray-200 pt-5">
                                <p class="text-xs text-gray-500 mb-1 uppercase tracking-wider font-medium">Emprendedor Asignado:</p>
                                @if (!string.IsNullOrEmpty(item.Emprendedor?.NombreEmprendedor))
                                {
                                    <div class="flex items-center gap-3">
                                        <div class="h-10 w-10 rounded-full bg-gradient-to-br from-orange-400 to-red-500 flex items-center justify-center text-white text-lg font-semibold">
                                            @(item.Emprendedor.NombreEmprendedor.Length > 0 ? item.Emprendedor.NombreEmprendedor.Substring(0, 1).ToUpper() : "E")
                                        </div>
                                        <div>
                                            <span class="font-semibold text-gray-800 text-md">
                                                @item.Emprendedor.NombreEmprendedor
                                            </span>
                                            @if (!string.IsNullOrEmpty(item.Emprendedor?.Categoria?.NombreCategoria))
                                            {
                                                <p class="text-xs text-orange-500">@item.Emprendedor.Categoria.NombreCategoria</p>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="flex items-center gap-3 text-gray-500">
                                        <div class="h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                                            </svg>
                                        </div>
                                        <span class="italic text-sm">Este stand está actualmente disponible.</span>
                                    </div>
                                }
                            </div>
                        </div>

                        @if (!item.Disponible && item.Emprendedor != null)
                        {
                            <div class="bg-gray-50 px-6 py-4 border-t border-gray-200">
                                <button type="button"
                                        class="w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-orange-500 hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 transition-transform transform hover:scale-105"
                                        onclick="openEmprendedorModal('@item.Emprendedor.IdEmprendedor', '@item.Emprendedor.NombreEmprendedor', '@(item.Emprendedor.DescripcionNegocio ?? "No hay descripción disponible.")', '@(item.Emprendedor.Categoria?.NombreCategoria ?? "Sin categoría")')">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                                    </svg>
                                    Ver Detalles del Emprendedor
                                </button>
                            </div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-16">
                <svg class="mx-auto h-16 w-16 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <h3 class="mt-4 text-xl font-semibold text-gray-800">No hay stands para mostrar</h3>
                <p class="mt-2 text-base text-gray-600">Pronto tendremos más información sobre nuestros stands. ¡Vuelve a visitarnos!</p>
            </div>
        }
    </div>
</div>

<!-- Modal para Detalles del Emprendedor -->
<div id="emprendedorModal" class="fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50 hidden transition-opacity duration-300" aria-labelledby="modal-title-emprendedor" role="dialog" aria-modal="true">
    <div class="bg-white rounded-2xl shadow-xl p-6 sm:p-8 max-w-lg w-full mx-4 transform transition-all duration-300 scale-95 opacity-0" id="modal-panel-emprendedor">
        <div class="flex justify-between items-center mb-6">
            <h2 id="modal-title-emprendedor" class="text-2xl font-bold text-gray-900">Detalles del Emprendedor</h2>
            <button id="closeEmprendedorModal" class="text-gray-400 hover:text-gray-600 transition-colors">
                <span class="sr-only">Cerrar</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>

        <div class="space-y-5">
            <div class="flex flex-col items-center sm:flex-row sm:items-start gap-6">
                <img id="emprendedorLogo" src="/imagenes/placeholder-emprendedor.png" alt="Logo del emprendedor" class="w-32 h-32 rounded-full object-cover shadow-lg border-4 border-white">
                <div class="text-center sm:text-left">
                    <h3 id="emprendedorName" class="text-3xl font-bold text-orange-600">Nombre Emprendedor</h3>
                    <p id="emprendedorCategoria" class="text-md text-gray-500 mt-1">Categoría</p>
                </div>
            </div>
            <div>
                <h4 class="text-sm font-semibold text-gray-500 uppercase tracking-wider mb-1">Sobre el emprendimiento:</h4>
                <p id="emprendedorDescription" class="text-gray-700 text-base leading-relaxed">Descripción del emprendedor...</p>
            </div>
        </div>
        <div class="mt-8 border-t border-gray-200 pt-6 text-right">
            <button type="button" id="closeEmprendedorModalButton" class="px-6 py-2.5 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                Cerrar
            </button>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const emprendedorModal = document.getElementById('emprendedorModal');
            const emprendedorModalPanel = document.getElementById('modal-panel-emprendedor');
            const closeEmprendedorModalButton = document.getElementById('closeEmprendedorModal');
            const closeEmprendedorModalButtonBottom = document.getElementById('closeEmprendedorModalButton');


            function openEmprendedorModal(emprendedorId, name, description, categoria) {
                document.getElementById('emprendedorName').textContent = name;
                document.getElementById('emprendedorDescription').textContent = description || 'No hay descripción disponible.';
                if (emprendedorId) {
                    document.getElementById('emprendedorLogo').src = `/Emprendedor/GetImagen/${emprendedorId}`;
                } else {
                    document.getElementById('emprendedorLogo').src = '/imagenes/placeholder-emprendedor.png';
                }
                document.getElementById('emprendedorCategoria').textContent = categoria || 'Sin categoría';

                emprendedorModal.classList.remove('hidden');
                setTimeout(() => {
                    emprendedorModal.classList.remove('opacity-0');
                    emprendedorModalPanel.classList.remove('scale-95', 'opacity-0');
                }, 10);
            }

            function hideEmprendedorModal() {
                emprendedorModalPanel.classList.add('scale-95', 'opacity-0');
                emprendedorModal.classList.add('opacity-0');
                setTimeout(() => {
                    emprendedorModal.classList.add('hidden');
                }, 300);
            }

            // Expose the function to global scope so it can be called from inline onclick
            window.openEmprendedorModal = openEmprendedorModal;

            closeEmprendedorModalButton.addEventListener('click', hideEmprendedorModal);
            closeEmprendedorModalButtonBottom.addEventListener('click', hideEmprendedorModal);

            window.addEventListener('click', function (event) {
                if (event.target === emprendedorModal) {
                    hideEmprendedorModal();
                }
            });
            window.addEventListener('keydown', function (event) {
                if (event.key === 'Escape' && !emprendedorModal.classList.contains('hidden')) {
                    hideEmprendedorModal();
                }
            });
        });
    </script>
}
