@model IEnumerable<SamaraProject1.Models.Stands>

@{
    ViewData["Title"] = "Lista de Stands";
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 sm:py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
        <!-- Imagen Encabezada -->
        <div class="mb-6 sm:mb-8 rounded-2xl overflow-hidden shadow-xl">
            <img src="/imagenes/mapa.jpeg" alt="Mapa de stands" class="w-full h-48 sm:h-64 md:h-80 lg:h-96 object-cover" />
        </div>

        <div class="flex flex-col sm:flex-row justify-between items-center mb-6 sm:mb-8 space-y-4 sm:space-y-0">
            <h1 class="text-3xl sm:text-4xl font-extrabold text-gray-900 text-center sm:text-left">
                <span class="bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-indigo-600">
                    Stands
                </span>
            </h1>
            <div class="flex flex-col sm:flex-row gap-3">
                <a href="@Url.Action("Crear", "Stands")" class="inline-flex items-center px-4 py-2 border border-blue-500 text-blue-500 bg-transparent rounded-md font-medium text-sm transition-all duration-300 ease-in-out hover:bg-blue-500 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 w-full sm:w-auto justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    Nuevo Stand
                </a>
                <button id="btnReportes" class="inline-flex items-center px-4 py-2 border border-green-500 text-green-500 bg-transparent rounded-md font-medium text-sm transition-all duration-300 ease-in-out hover:bg-green-500 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 w-full sm:w-auto justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V8z" clip-rule="evenodd" />
                    </svg>
                    Generar Reportes
                </button>
            </div>
        </div>

        <!-- Modal para generar reportes -->
        <div id="reporteModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50 hidden">
            <div class="bg-white rounded-lg shadow-xl p-6 sm:p-8 max-w-md w-full mx-4">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-bold text-gray-800">Generar Reporte de Stands</h2>
                    <button id="closeModal" class="text-gray-500 hover:text-gray-700">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>

                <div class="space-y-4">
                    <div>
                        <label for="fechaInicio" class="block text-sm font-medium text-gray-700">Fecha Inicio</label>
                        <input type="date" id="fechaInicio" name="fechaInicio" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>

                    <div>
                        <label for="fechaFin" class="block text-sm font-medium text-gray-700">Fecha Fin</label>
                        <input type="date" id="fechaFin" name="fechaFin" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>

                    <div class="flex flex-col sm:flex-row gap-3 pt-4">
                        <button id="btnExcel" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 w-full">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 011 1v1H3V4zm1 2h12v10a1 1 0 01-1 1H5a1 1 0 01-1-1V6zm6 7a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                            </svg>
                            Excel
                        </button>
                        <button id="btnPDF" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 w-full">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z" clip-rule="evenodd" />
                            </svg>
                            PDF
                        </button>
                    </div>
                </div>
            </div>
        </div>

        @if (TempData["Message"] != null)
        {
            <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-3 sm:p-4 mb-6 sm:mb-8 rounded-md shadow" role="alert">
                <p class="font-medium text-sm sm:text-base">@TempData["Message"]</p>
            </div>
        }

        <!-- Lista de Stands -->
        <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
            <ul class="divide-y divide-gray-200">
                @foreach (var item in Model)
                {
                    <li class="p-4 sm:p-6 hover:bg-gray-50 transition duration-200 ease-in-out">
                        <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
                            <div class="flex-grow space-y-2">
                                <h2 class="text-lg sm:text-xl font-semibold text-gray-800">Stand @item.Numero_Stand</h2>
                                <p class="text-sm sm:text-base text-gray-600">@item.Descripcion_Stand</p>
                                <p class="text-xs sm:text-sm text-gray-500">
                                    Emprendedor:
                                    <span class="font-medium">
                                        @(string.IsNullOrEmpty(item.Emprendedor?.NombreEmprendedor) ? "No asignado" : item.Emprendedor.NombreEmprendedor)
                                    </span>
                                </p>
                                <p class="text-xs sm:text-sm font-semibold @(item.Disponible ? "text-green-600" : "text-red-600")">
                                    Estado: @(item.Disponible ? "Disponible" : "No disponible")
                                </p>
                            </div>
                            <div class="flex flex-row gap-2 justify-end">
                                <a href="@Url.Action("QuitarEmprendedor", "Stands", new { id = item.IdStand })"
                                   class="inline-flex items-center px-3 py-2 border border-gray-300 text-xs font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M11 6a3 3 0 11-6 0 3 3 0 016 0zM14 17a6 6 0 00-12 0h12z" />
                                        <path fill-rule="evenodd" d="M12.414 5.586a1 1 0 011.414 1.414L12.414 8.414l1.414 1.414a1 1 0 01-1.414 1.414L11 9.828l-1.414 1.414a1 1 0 01-1.414-1.414l1.414-1.414-1.414-1.414a1 1 0 011.414-1.414L11 7.172l1.414-1.586z" clip-rule="evenodd" />
                                    </svg>
                                    Quitar
                                </a>
                                <a href="@Url.Action("Editar", "Stands", new { id = item.IdStand })"
                                   class="inline-flex items-center px-3 py-2 border border-blue-500 text-blue-500 bg-transparent rounded-md text-xs font-medium transition-all duration-300 ease-in-out hover:bg-blue-500 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                                    </svg>
                                    Editar
                                </a>
                                <a href="@Url.Action("Eliminar", "Stands", new { id = item.IdStand })"
                                   class="inline-flex items-center px-3 py-2 border border-red-500 text-red-500 bg-transparent rounded-md text-xs font-medium transition-all duration-300 ease-in-out hover:bg-red-500 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                                    </svg>
                                    Eliminar
                                </a>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

<!-- Formularios ocultos para enviar reportes -->
<form id="excelForm" method="post" action="@Url.Action("GenerarReporteExcel", "Stands")" style="display:none;">
    <input type="hidden" id="excelFechaInicio" name="fechaInicio" />
    <input type="hidden" id="excelFechaFin" name="fechaFin" />
</form>

<form id="pdfForm" method="post" action="@Url.Action("GenerarReportePDF", "Stands")" style="display:none;">
    <input type="hidden" id="pdfFechaInicio" name="fechaInicio" />
    <input type="hidden" id="pdfFechaFin" name="fechaFin" />
</form>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('reporteModal');
            const btnReportes = document.getElementById('btnReportes');
            const closeModal = document.getElementById('closeModal');
            const btnExcel = document.getElementById('btnExcel');
            const btnPDF = document.getElementById('btnPDF');

            // Establecer fechas predeterminadas (último mes)
            const fechaFin = document.getElementById('fechaFin');
            const fechaInicio = document.getElementById('fechaInicio');

            const hoy = new Date();
            fechaFin.valueAsDate = hoy;

            const unMesAtras = new Date();
            unMesAtras.setMonth(unMesAtras.getMonth() - 1);
            fechaInicio.valueAsDate = unMesAtras;

            // Mostrar modal
            btnReportes.addEventListener('click', function () {
                modal.classList.remove('hidden');
            });

            // Cerrar modal
            closeModal.addEventListener('click', function () {
                modal.classList.add('hidden');
            });

            // Cerrar modal al hacer clic fuera
            window.addEventListener('click', function (event) {
                if (event.target === modal) {
                    modal.classList.add('hidden');
                }
            });

            // Generar reporte Excel
            btnExcel.addEventListener('click', function () {
                if (validarFechas()) {
                    document.getElementById('excelFechaInicio').value = fechaInicio.value;
                    document.getElementById('excelFechaFin').value = fechaFin.value;
                    document.getElementById('excelForm').submit();
                }
            });

            // Generar reporte PDF
            btnPDF.addEventListener('click', function () {
                if (validarFechas()) {
                    document.getElementById('pdfFechaInicio').value = fechaInicio.value;
                    document.getElementById('pdfFechaFin').value = fechaFin.value;
                    document.getElementById('pdfForm').submit();
                }
            });

            // Validar fechas
            function validarFechas() {
                const inicio = new Date(fechaInicio.value);
                const fin = new Date(fechaFin.value);

                if (isNaN(inicio.getTime()) || isNaN(fin.getTime())) {
                    alert('Por favor, seleccione fechas válidas.');
                    return false;
                }

                if (inicio > fin) {
                    alert('La fecha de inicio no puede ser posterior a la fecha de fin.');
                    return false;
                }

                return true;
            }
        });
    </script>
}

