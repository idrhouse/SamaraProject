@model SamaraProject1.Models.Producto

@{
    ViewData["Title"] = "Nuevo Producto - Feria Sámara Market";
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-6 sm:py-8 md:py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-3xl mx-auto">
        <div class="mb-6 flex justify-between items-center">
            <h1 class="text-2xl sm:text-3xl md:text-4xl font-extrabold text-gray-900">
                <span class="bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-indigo-600">
                    Crear Nuevo Producto
                </span>
            </h1>
            <a href="@Url.Action("Lista", "Producto")" class="inline-flex items-center px-4 py-2 border border-blue-500 text-blue-500 bg-transparent rounded-md font-medium text-sm transition-all duration-300 ease-in-out hover:bg-blue-500 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Volver a la Lista
            </a>
        </div>

        <div class="bg-white shadow-xl rounded-2xl overflow-hidden">
            <div class="p-6 sm:p-8">
                <form asp-action="Crear" method="post" enctype="multipart/form-data" class="space-y-6">
                    <div asp-validation-summary="ModelOnly" class="text-sm text-red-600 bg-red-100 border border-red-400 rounded-md p-3"></div>

                    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
                        <div>
                            <label asp-for="Nombre_Producto" class="block text-sm font-medium text-gray-700">Nombre del Producto</label>
                            <input asp-for="Nombre_Producto" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" required>
                            <span asp-validation-for="Nombre_Producto" class="text-xs text-red-500"></span>
                        </div>

                        <div>
                            <label asp-for="IdTipoProducto" class="block text-sm font-medium text-gray-700">Tipo de Producto</label>
                            <select asp-for="IdTipoProducto" asp-items="@(new SelectList(ViewBag.TipoProductos, "IdTipoProducto", "NombreTipo"))" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" required>
                                <option value="">-- Seleccione un Tipo de Producto --</option>
                            </select>
                            <span asp-validation-for="IdTipoProducto" class="text-xs text-red-500"></span>
                        </div>
                    </div>

                    <div>
                        <label asp-for="Descripcion" class="block text-sm font-medium text-gray-700">Descripción del Producto</label>
                        <textarea asp-for="Descripcion" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" rows="3" required></textarea>
                        <span asp-validation-for="Descripcion" class="text-xs text-red-500"></span>
                    </div>

                    <div>
                        <label for="IdCategoria" class="block text-sm font-medium text-gray-700">Categoría del Emprendedor</label>
                        <select id="IdCategoria" name="IdCategoria" asp-items="@ViewBag.Categorias" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out" onchange="cargarEmprendedores()">
                            <option value="">-- Seleccione una Categoría --</option>
                        </select>
                    </div>

                    <div>
                        <label for="Emprendedores" class="block text-sm font-medium text-gray-700">Seleccione Emprendedores</label>
                        <select id="Emprendedores" name="SelectedEmprendedores" multiple asp-items="@(new MultiSelectList(ViewBag.Emprendedores, "IdEmprendedor", "NombreEmprendedor"))" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out">
                        </select>
                        <p class="mt-2 text-sm text-gray-500">Use Ctrl (Cmd en Mac) para seleccionar múltiples emprendedores.</p>
                    </div>

                    <!-- Reemplazar el input de imagen con un área de arrastrar y soltar -->
                    <div>
                        <label for="imagen" class="block text-sm font-medium text-gray-700">Imagen del Producto</label>
                        <div id="drop-area" class="mt-1 flex flex-col items-center justify-center px-4 sm:px-6 pt-4 sm:pt-5 pb-4 sm:pb-6 border-2 border-gray-300 border-dashed rounded-md hover:bg-gray-50 transition-colors duration-200">
                            <div class="space-y-1 text-center">
                                <svg class="mx-auto h-10 sm:h-12 w-10 sm:w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true">
                                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                <div class="flex text-sm text-gray-600">
                                    <label for="imagen" class="relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-blue-500">
                                        <span>Subir una imagen</span>
                                        <input id="imagen" name="imagen" type="file" accept="image/*" class="sr-only">
                                    </label>
                                    <p class="pl-1">o arrastrar y soltar</p>
                                </div>
                                <p class="text-xs text-gray-500">PNG, JPG, GIF hasta 10MB</p>
                            </div>

                            <!-- Contenedor para la previsualización de la imagen -->
                            <div id="image-preview" class="mt-4 hidden">
                                <img id="preview-img" src="#" alt="Vista previa" class="max-h-48 rounded-lg shadow-md">
                                <button type="button" id="remove-image" class="mt-2 inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                    Eliminar imagen
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="flex justify-end space-x-3">
                        <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                            </svg>
                            Crear Producto
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Configurar el evento de cambio para el select de categorías
        var categoriaSelect = document.getElementById("IdCategoria");
        if (categoriaSelect) {
            categoriaSelect.addEventListener('change', cargarEmprendedores);

            // Ejecutar cargarEmprendedores al inicio si ya hay una categoría seleccionada
            if (categoriaSelect.value) {
                cargarEmprendedores();
            }
        }

        // Función para cargar emprendedores por categoría
        function cargarEmprendedores() {
            var idCategoria = document.getElementById("IdCategoria").value;
            var emprendedoresSelect = document.getElementById("Emprendedores");

            // Limpiar opciones actuales
            emprendedoresSelect.innerHTML = "";

            if (!idCategoria) {
                // Si no hay categoría seleccionada, mostrar mensaje
                var defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.text = "-- Seleccione una categoría primero --";
                emprendedoresSelect.appendChild(defaultOption);
                return;
            }

            // Mostrar mensaje de carga
            var loadingOption = document.createElement("option");
            loadingOption.value = "";
            loadingOption.text = "Cargando emprendedores...";
            emprendedoresSelect.appendChild(loadingOption);

            // Construir la URL con el ID de categoría
            var url = '@Url.Action("ObtenerEmprendedoresPorCategoria", "Producto")' + '?idCategoria=' + idCategoria;

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error en la respuesta: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("Datos recibidos:", data);

                    // Limpiar opciones de carga
                    emprendedoresSelect.innerHTML = "";

                    // Agregar emprendedores recibidos
                    if (data && data.length > 0) {
                        data.forEach(function(emprendedor) {
                            var option = document.createElement("option");
                            option.value = emprendedor.idEmprendedor;
                            option.text = emprendedor.nombreEmprendedor;
                            emprendedoresSelect.appendChild(option);
                        });
                    } else {
                        var noOption = document.createElement("option");
                        noOption.value = "";
                        noOption.text = "No hay emprendedores en esta categoría";
                        emprendedoresSelect.appendChild(noOption);
                    }
                })
                .catch(error => {
                    console.error("Error al cargar emprendedores:", error);
                    emprendedoresSelect.innerHTML = "";
                    var errorOption = document.createElement("option");
                    errorOption.value = "";
                    errorOption.text = "Error al cargar emprendedores";
                    emprendedoresSelect.appendChild(errorOption);
                });
        }

        // Código para la previsualización de imágenes y arrastrar y soltar
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('imagen');
        const imagePreview = document.getElementById('image-preview');
        const previewImg = document.getElementById('preview-img');
        const removeButton = document.getElementById('remove-image');

        // Función para mostrar la previsualización de la imagen
        function showPreview(file) {
            if (file) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    previewImg.src = e.target.result;
                    imagePreview.classList.remove('hidden');
                }

                reader.readAsDataURL(file);
            }
        }

        // Evento para cuando se selecciona un archivo mediante el input
        if (fileInput) {
            fileInput.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    showPreview(this.files[0]);
                }
            });
        }

        // Eventos para arrastrar y soltar
        if (dropArea) {
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropArea.classList.add('border-blue-500', 'bg-blue-50');
            }

            function unhighlight() {
                dropArea.classList.remove('border-blue-500', 'bg-blue-50');
            }

            // Manejar el evento de soltar archivos
            dropArea.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;

                if (files && files.length) {
                    fileInput.files = files;
                    showPreview(files[0]);
                }
            }
        }

        // Botón para eliminar la imagen seleccionada
        if (removeButton) {
            removeButton.addEventListener('click', function() {
                fileInput.value = '';
                previewImg.src = '#';
                imagePreview.classList.add('hidden');
            });
        }
    });
</script>
}

